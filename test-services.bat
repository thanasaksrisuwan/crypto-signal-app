@echo off
REM filepath: c:\Users\Nack\Documents\crypto-signal-app\test-services.bat
REM ===================================================================
REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
REM ===================================================================
setlocal EnableDelayedExpansion

echo ======================================================
echo         CRYPTO SIGNAL APP - SERVICE TESTER
echo ======================================================
echo.

REM ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö
set "TEST_TIMESTAMP=%DATE% %TIME%"
echo [INFO] ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö: %TEST_TIMESTAMP%
echo.

set SERVICE_COUNT=0
set SERVICE_OK=0

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Redis
echo [TEST 1/3] Redis Server...
tasklist /fi "imagename eq redis-server.exe" 2>nul | find "redis-server.exe" > nul
set /a SERVICE_COUNT+=1
if %ERRORLEVEL% EQU 0 (
    echo [‚úì] Redis Server: OK
    set /a SERVICE_OK+=1
) else (
    echo [‚úó] Redis Server: FAILED
    echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ redis-server.exe ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Backend API (port 8000)
echo.
echo [TEST 2/3] Backend API...
set /a SERVICE_COUNT+=1
netstat -ano 2>nul | find ":8000" | find "LISTENING" > nul
if %ERRORLEVEL% EQU 0 (
    echo [‚úì] Backend API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 8000
    
    REM ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ç‡∏≠‡∏á API
    curl -s -o nul -m 5 -w "%%{http_code}" http://localhost:8000/api/status > %TEMP%\api_status.txt 2>nul
    if %ERRORLEVEL% EQU 0 (
        set /p API_STATUS=<%TEMP%\api_status.txt 2>nul
        del %TEMP%\api_status.txt 2>nul
    
        if "!API_STATUS!"=="200" (
            echo [‚úì] Backend API response: OK (HTTP !API_STATUS!)
            set /a SERVICE_OK+=1
        ) else (
            echo [!] Backend API response: ERROR (HTTP !API_STATUS!)
            echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 (‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö !API_STATUS!)
            REM ‡∏•‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoint ‡∏≠‡∏∑‡πà‡∏ô
            curl -s -o nul -m 5 -w "%%{http_code}" http://localhost:8000/ > %TEMP%\api_alt.txt 2>nul
            set /p API_ALT=<%TEMP%\api_alt.txt 2>nul
            del %TEMP%\api_alt.txt 2>nul
            if "!API_ALT!"=="200" (
                echo [‚úì] Backend API alternate endpoint: OK (HTTP !API_ALT!)
                set /a SERVICE_OK+=1
            )
        )
    ) else (
        echo [‚úó] Backend API response: FAILED (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ)
        echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ (curl ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
    )
) else (
    echo [‚úó] Backend API: FAILED
    echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï 8000
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Frontend (port 3000)
echo.
echo [TEST 3/3] Frontend...
set /a SERVICE_COUNT+=1
netstat -ano 2>nul | find ":3000" | find "LISTENING" > nul
if %ERRORLEVEL% EQU 0 (
    echo [‚úì] Frontend ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 3000
    
    REM ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Frontend
    curl -s -o nul -m 5 -w "%%{http_code}" http://localhost:3000/ > %TEMP%\frontend_status.txt 2>nul
    if %ERRORLEVEL% EQU 0 (
        set /p FRONTEND_STATUS=<%TEMP%\frontend_status.txt 2>nul
        del %TEMP%\frontend_status.txt 2>nul
    
        if "!FRONTEND_STATUS!"=="200" (
            echo [‚úì] Frontend response: OK (HTTP !FRONTEND_STATUS!)
            set /a SERVICE_OK+=1
        ) else (
            echo [!] Frontend response: ERROR (HTTP !FRONTEND_STATUS!)
            echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: Frontend ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡πÉ‡∏´‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ HTTP !FRONTEND_STATUS!
        )
    ) else (
        echo [‚úó] Frontend response: FAILED (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ)
        echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: Frontend ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î
    )
) else (
    echo [‚úó] Frontend: FAILED
    echo [INFO] ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï 3000
)

echo.
echo ======================================================
echo                     ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
echo ======================================================
echo [‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô] ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: %TEST_TIMESTAMP%
set /a SUCCESS_PERCENT=SERVICE_OK*100/SERVICE_COUNT
echo [‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô] ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: %SERVICE_OK%/%SERVICE_COUNT% ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ (%SUCCESS_PERCENT%%%)

if %SERVICE_OK% EQU %SERVICE_COUNT% (
    echo [‡∏™‡∏£‡∏∏‡∏õ] ‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏ó‡∏∏‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥)
    echo [INFO] ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: http://localhost:3000
) else (
    if %SERVICE_OK% GEQ 2 (
        echo [‡∏™‡∏£‡∏∏‡∏õ] üü° ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡πÄ‡∏Å‡∏∑‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏ö‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£)
        echo [INFO] ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: http://localhost:3000
        echo [INFO] ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
    ) else if %SERVICE_OK% GEQ 1 (
        echo [‡∏™‡∏£‡∏∏‡∏õ] ‚ö†Ô∏è ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (‡∏ö‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥)
        echo [INFO] ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    ) else (
        echo [‡∏™‡∏£‡∏∏‡∏õ] ‚ùå ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)
        echo [INFO] ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    )
)

echo.
echo [INFO] ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:
echo   1. ‡πÉ‡∏ä‡πâ start-all-components.bat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡∏°‡πà
echo   2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå log ‡πÉ‡∏ô logs/ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î

pause
exit /b 0
